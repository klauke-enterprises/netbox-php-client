<?php
/**
 * VpnApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * NetBox REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1.1 (4.1)
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.8.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * VpnApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class VpnApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for vpnIkePoliciesBulkDestroy
     *
     * .
     *
     */
    public function testVpnIkePoliciesBulkDestroy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIkePoliciesBulkPartialUpdate
     *
     * .
     *
     */
    public function testVpnIkePoliciesBulkPartialUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIkePoliciesBulkUpdate
     *
     * .
     *
     */
    public function testVpnIkePoliciesBulkUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIkePoliciesCreate
     *
     * .
     *
     */
    public function testVpnIkePoliciesCreate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIkePoliciesDestroy
     *
     * .
     *
     */
    public function testVpnIkePoliciesDestroy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIkePoliciesList
     *
     * .
     *
     */
    public function testVpnIkePoliciesList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIkePoliciesPartialUpdate
     *
     * .
     *
     */
    public function testVpnIkePoliciesPartialUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIkePoliciesRetrieve
     *
     * .
     *
     */
    public function testVpnIkePoliciesRetrieve()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIkePoliciesUpdate
     *
     * .
     *
     */
    public function testVpnIkePoliciesUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIkeProposalsBulkDestroy
     *
     * .
     *
     */
    public function testVpnIkeProposalsBulkDestroy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIkeProposalsBulkPartialUpdate
     *
     * .
     *
     */
    public function testVpnIkeProposalsBulkPartialUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIkeProposalsBulkUpdate
     *
     * .
     *
     */
    public function testVpnIkeProposalsBulkUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIkeProposalsCreate
     *
     * .
     *
     */
    public function testVpnIkeProposalsCreate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIkeProposalsDestroy
     *
     * .
     *
     */
    public function testVpnIkeProposalsDestroy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIkeProposalsList
     *
     * .
     *
     */
    public function testVpnIkeProposalsList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIkeProposalsPartialUpdate
     *
     * .
     *
     */
    public function testVpnIkeProposalsPartialUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIkeProposalsRetrieve
     *
     * .
     *
     */
    public function testVpnIkeProposalsRetrieve()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIkeProposalsUpdate
     *
     * .
     *
     */
    public function testVpnIkeProposalsUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIpsecPoliciesBulkDestroy
     *
     * .
     *
     */
    public function testVpnIpsecPoliciesBulkDestroy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIpsecPoliciesBulkPartialUpdate
     *
     * .
     *
     */
    public function testVpnIpsecPoliciesBulkPartialUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIpsecPoliciesBulkUpdate
     *
     * .
     *
     */
    public function testVpnIpsecPoliciesBulkUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIpsecPoliciesCreate
     *
     * .
     *
     */
    public function testVpnIpsecPoliciesCreate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIpsecPoliciesDestroy
     *
     * .
     *
     */
    public function testVpnIpsecPoliciesDestroy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIpsecPoliciesList
     *
     * .
     *
     */
    public function testVpnIpsecPoliciesList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIpsecPoliciesPartialUpdate
     *
     * .
     *
     */
    public function testVpnIpsecPoliciesPartialUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIpsecPoliciesRetrieve
     *
     * .
     *
     */
    public function testVpnIpsecPoliciesRetrieve()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIpsecPoliciesUpdate
     *
     * .
     *
     */
    public function testVpnIpsecPoliciesUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIpsecProfilesBulkDestroy
     *
     * .
     *
     */
    public function testVpnIpsecProfilesBulkDestroy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIpsecProfilesBulkPartialUpdate
     *
     * .
     *
     */
    public function testVpnIpsecProfilesBulkPartialUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIpsecProfilesBulkUpdate
     *
     * .
     *
     */
    public function testVpnIpsecProfilesBulkUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIpsecProfilesCreate
     *
     * .
     *
     */
    public function testVpnIpsecProfilesCreate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIpsecProfilesDestroy
     *
     * .
     *
     */
    public function testVpnIpsecProfilesDestroy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIpsecProfilesList
     *
     * .
     *
     */
    public function testVpnIpsecProfilesList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIpsecProfilesPartialUpdate
     *
     * .
     *
     */
    public function testVpnIpsecProfilesPartialUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIpsecProfilesRetrieve
     *
     * .
     *
     */
    public function testVpnIpsecProfilesRetrieve()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIpsecProfilesUpdate
     *
     * .
     *
     */
    public function testVpnIpsecProfilesUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIpsecProposalsBulkDestroy
     *
     * .
     *
     */
    public function testVpnIpsecProposalsBulkDestroy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIpsecProposalsBulkPartialUpdate
     *
     * .
     *
     */
    public function testVpnIpsecProposalsBulkPartialUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIpsecProposalsBulkUpdate
     *
     * .
     *
     */
    public function testVpnIpsecProposalsBulkUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIpsecProposalsCreate
     *
     * .
     *
     */
    public function testVpnIpsecProposalsCreate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIpsecProposalsDestroy
     *
     * .
     *
     */
    public function testVpnIpsecProposalsDestroy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIpsecProposalsList
     *
     * .
     *
     */
    public function testVpnIpsecProposalsList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIpsecProposalsPartialUpdate
     *
     * .
     *
     */
    public function testVpnIpsecProposalsPartialUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIpsecProposalsRetrieve
     *
     * .
     *
     */
    public function testVpnIpsecProposalsRetrieve()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnIpsecProposalsUpdate
     *
     * .
     *
     */
    public function testVpnIpsecProposalsUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnL2vpnTerminationsBulkDestroy
     *
     * .
     *
     */
    public function testVpnL2vpnTerminationsBulkDestroy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnL2vpnTerminationsBulkPartialUpdate
     *
     * .
     *
     */
    public function testVpnL2vpnTerminationsBulkPartialUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnL2vpnTerminationsBulkUpdate
     *
     * .
     *
     */
    public function testVpnL2vpnTerminationsBulkUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnL2vpnTerminationsCreate
     *
     * .
     *
     */
    public function testVpnL2vpnTerminationsCreate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnL2vpnTerminationsDestroy
     *
     * .
     *
     */
    public function testVpnL2vpnTerminationsDestroy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnL2vpnTerminationsList
     *
     * .
     *
     */
    public function testVpnL2vpnTerminationsList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnL2vpnTerminationsPartialUpdate
     *
     * .
     *
     */
    public function testVpnL2vpnTerminationsPartialUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnL2vpnTerminationsRetrieve
     *
     * .
     *
     */
    public function testVpnL2vpnTerminationsRetrieve()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnL2vpnTerminationsUpdate
     *
     * .
     *
     */
    public function testVpnL2vpnTerminationsUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnL2vpnsBulkDestroy
     *
     * .
     *
     */
    public function testVpnL2vpnsBulkDestroy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnL2vpnsBulkPartialUpdate
     *
     * .
     *
     */
    public function testVpnL2vpnsBulkPartialUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnL2vpnsBulkUpdate
     *
     * .
     *
     */
    public function testVpnL2vpnsBulkUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnL2vpnsCreate
     *
     * .
     *
     */
    public function testVpnL2vpnsCreate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnL2vpnsDestroy
     *
     * .
     *
     */
    public function testVpnL2vpnsDestroy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnL2vpnsList
     *
     * .
     *
     */
    public function testVpnL2vpnsList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnL2vpnsPartialUpdate
     *
     * .
     *
     */
    public function testVpnL2vpnsPartialUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnL2vpnsRetrieve
     *
     * .
     *
     */
    public function testVpnL2vpnsRetrieve()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnL2vpnsUpdate
     *
     * .
     *
     */
    public function testVpnL2vpnsUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnTunnelGroupsBulkDestroy
     *
     * .
     *
     */
    public function testVpnTunnelGroupsBulkDestroy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnTunnelGroupsBulkPartialUpdate
     *
     * .
     *
     */
    public function testVpnTunnelGroupsBulkPartialUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnTunnelGroupsBulkUpdate
     *
     * .
     *
     */
    public function testVpnTunnelGroupsBulkUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnTunnelGroupsCreate
     *
     * .
     *
     */
    public function testVpnTunnelGroupsCreate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnTunnelGroupsDestroy
     *
     * .
     *
     */
    public function testVpnTunnelGroupsDestroy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnTunnelGroupsList
     *
     * .
     *
     */
    public function testVpnTunnelGroupsList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnTunnelGroupsPartialUpdate
     *
     * .
     *
     */
    public function testVpnTunnelGroupsPartialUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnTunnelGroupsRetrieve
     *
     * .
     *
     */
    public function testVpnTunnelGroupsRetrieve()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnTunnelGroupsUpdate
     *
     * .
     *
     */
    public function testVpnTunnelGroupsUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnTunnelTerminationsBulkDestroy
     *
     * .
     *
     */
    public function testVpnTunnelTerminationsBulkDestroy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnTunnelTerminationsBulkPartialUpdate
     *
     * .
     *
     */
    public function testVpnTunnelTerminationsBulkPartialUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnTunnelTerminationsBulkUpdate
     *
     * .
     *
     */
    public function testVpnTunnelTerminationsBulkUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnTunnelTerminationsCreate
     *
     * .
     *
     */
    public function testVpnTunnelTerminationsCreate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnTunnelTerminationsDestroy
     *
     * .
     *
     */
    public function testVpnTunnelTerminationsDestroy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnTunnelTerminationsList
     *
     * .
     *
     */
    public function testVpnTunnelTerminationsList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnTunnelTerminationsPartialUpdate
     *
     * .
     *
     */
    public function testVpnTunnelTerminationsPartialUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnTunnelTerminationsRetrieve
     *
     * .
     *
     */
    public function testVpnTunnelTerminationsRetrieve()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnTunnelTerminationsUpdate
     *
     * .
     *
     */
    public function testVpnTunnelTerminationsUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnTunnelsBulkDestroy
     *
     * .
     *
     */
    public function testVpnTunnelsBulkDestroy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnTunnelsBulkPartialUpdate
     *
     * .
     *
     */
    public function testVpnTunnelsBulkPartialUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnTunnelsBulkUpdate
     *
     * .
     *
     */
    public function testVpnTunnelsBulkUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnTunnelsCreate
     *
     * .
     *
     */
    public function testVpnTunnelsCreate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnTunnelsDestroy
     *
     * .
     *
     */
    public function testVpnTunnelsDestroy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnTunnelsList
     *
     * .
     *
     */
    public function testVpnTunnelsList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnTunnelsPartialUpdate
     *
     * .
     *
     */
    public function testVpnTunnelsPartialUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnTunnelsRetrieve
     *
     * .
     *
     */
    public function testVpnTunnelsRetrieve()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpnTunnelsUpdate
     *
     * .
     *
     */
    public function testVpnTunnelsUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
